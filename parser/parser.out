Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ID

Grammar

Rule 0     S' -> if
Rule 1     if -> IF expression THEN if ELSE if
Rule 2     if -> IF expression THEN if
Rule 3     if -> expression
Rule 4     expression -> expression PLUS expression
Rule 5     expression -> term
Rule 6     term -> term MULT factor
Rule 7     term -> factor
Rule 8     factor -> NUM
Rule 9     factor -> LBR expression RBR

Terminals, with rules where they appear

ELSE                 : 1
ID                   : 
IF                   : 1 2
LBR                  : 9
MULT                 : 6
NUM                  : 8
PLUS                 : 4
RBR                  : 9
THEN                 : 1 2
error                : 

Nonterminals, with rules where they appear

expression           : 1 2 3 4 4 9
factor               : 6 7
if                   : 1 1 2 0
term                 : 5 6

Parsing method: LALR

state 0

    (0) S' -> . if
    (1) if -> . IF expression THEN if ELSE if
    (2) if -> . IF expression THEN if
    (3) if -> . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . term
    (6) term -> . term MULT factor
    (7) term -> . factor
    (8) factor -> . NUM
    (9) factor -> . LBR expression RBR

    IF              shift and go to state 2
    NUM             shift and go to state 6
    LBR             shift and go to state 7

    if                             shift and go to state 1
    expression                     shift and go to state 3
    term                           shift and go to state 4
    factor                         shift and go to state 5

state 1

    (0) S' -> if .



state 2

    (1) if -> IF . expression THEN if ELSE if
    (2) if -> IF . expression THEN if
    (4) expression -> . expression PLUS expression
    (5) expression -> . term
    (6) term -> . term MULT factor
    (7) term -> . factor
    (8) factor -> . NUM
    (9) factor -> . LBR expression RBR

    NUM             shift and go to state 6
    LBR             shift and go to state 7

    expression                     shift and go to state 8
    term                           shift and go to state 4
    factor                         shift and go to state 5

state 3

    (3) if -> expression .
    (4) expression -> expression . PLUS expression

    $end            reduce using rule 3 (if -> expression .)
    ELSE            reduce using rule 3 (if -> expression .)
    PLUS            shift and go to state 9


state 4

    (5) expression -> term .
    (6) term -> term . MULT factor

    PLUS            reduce using rule 5 (expression -> term .)
    $end            reduce using rule 5 (expression -> term .)
    THEN            reduce using rule 5 (expression -> term .)
    RBR             reduce using rule 5 (expression -> term .)
    ELSE            reduce using rule 5 (expression -> term .)
    MULT            shift and go to state 10


state 5

    (7) term -> factor .

    MULT            reduce using rule 7 (term -> factor .)
    PLUS            reduce using rule 7 (term -> factor .)
    $end            reduce using rule 7 (term -> factor .)
    THEN            reduce using rule 7 (term -> factor .)
    RBR             reduce using rule 7 (term -> factor .)
    ELSE            reduce using rule 7 (term -> factor .)


state 6

    (8) factor -> NUM .

    MULT            reduce using rule 8 (factor -> NUM .)
    PLUS            reduce using rule 8 (factor -> NUM .)
    $end            reduce using rule 8 (factor -> NUM .)
    THEN            reduce using rule 8 (factor -> NUM .)
    RBR             reduce using rule 8 (factor -> NUM .)
    ELSE            reduce using rule 8 (factor -> NUM .)


state 7

    (9) factor -> LBR . expression RBR
    (4) expression -> . expression PLUS expression
    (5) expression -> . term
    (6) term -> . term MULT factor
    (7) term -> . factor
    (8) factor -> . NUM
    (9) factor -> . LBR expression RBR

    NUM             shift and go to state 6
    LBR             shift and go to state 7

    expression                     shift and go to state 11
    term                           shift and go to state 4
    factor                         shift and go to state 5

state 8

    (1) if -> IF expression . THEN if ELSE if
    (2) if -> IF expression . THEN if
    (4) expression -> expression . PLUS expression

    THEN            shift and go to state 12
    PLUS            shift and go to state 9


state 9

    (4) expression -> expression PLUS . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . term
    (6) term -> . term MULT factor
    (7) term -> . factor
    (8) factor -> . NUM
    (9) factor -> . LBR expression RBR

    NUM             shift and go to state 6
    LBR             shift and go to state 7

    expression                     shift and go to state 13
    term                           shift and go to state 4
    factor                         shift and go to state 5

state 10

    (6) term -> term MULT . factor
    (8) factor -> . NUM
    (9) factor -> . LBR expression RBR

    NUM             shift and go to state 6
    LBR             shift and go to state 7

    factor                         shift and go to state 14

state 11

    (9) factor -> LBR expression . RBR
    (4) expression -> expression . PLUS expression

    RBR             shift and go to state 15
    PLUS            shift and go to state 9


state 12

    (1) if -> IF expression THEN . if ELSE if
    (2) if -> IF expression THEN . if
    (1) if -> . IF expression THEN if ELSE if
    (2) if -> . IF expression THEN if
    (3) if -> . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . term
    (6) term -> . term MULT factor
    (7) term -> . factor
    (8) factor -> . NUM
    (9) factor -> . LBR expression RBR

    IF              shift and go to state 2
    NUM             shift and go to state 6
    LBR             shift and go to state 7

    expression                     shift and go to state 3
    if                             shift and go to state 16
    term                           shift and go to state 4
    factor                         shift and go to state 5

state 13

    (4) expression -> expression PLUS expression .
    (4) expression -> expression . PLUS expression

  ! shift/reduce conflict for PLUS resolved as shift
    $end            reduce using rule 4 (expression -> expression PLUS expression .)
    THEN            reduce using rule 4 (expression -> expression PLUS expression .)
    RBR             reduce using rule 4 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 4 (expression -> expression PLUS expression .)
    PLUS            shift and go to state 9

  ! PLUS            [ reduce using rule 4 (expression -> expression PLUS expression .) ]


state 14

    (6) term -> term MULT factor .

    MULT            reduce using rule 6 (term -> term MULT factor .)
    PLUS            reduce using rule 6 (term -> term MULT factor .)
    $end            reduce using rule 6 (term -> term MULT factor .)
    THEN            reduce using rule 6 (term -> term MULT factor .)
    RBR             reduce using rule 6 (term -> term MULT factor .)
    ELSE            reduce using rule 6 (term -> term MULT factor .)


state 15

    (9) factor -> LBR expression RBR .

    MULT            reduce using rule 9 (factor -> LBR expression RBR .)
    PLUS            reduce using rule 9 (factor -> LBR expression RBR .)
    $end            reduce using rule 9 (factor -> LBR expression RBR .)
    THEN            reduce using rule 9 (factor -> LBR expression RBR .)
    RBR             reduce using rule 9 (factor -> LBR expression RBR .)
    ELSE            reduce using rule 9 (factor -> LBR expression RBR .)


state 16

    (1) if -> IF expression THEN if . ELSE if
    (2) if -> IF expression THEN if .

  ! shift/reduce conflict for ELSE resolved as shift
    ELSE            shift and go to state 17
    $end            reduce using rule 2 (if -> IF expression THEN if .)

  ! ELSE            [ reduce using rule 2 (if -> IF expression THEN if .) ]


state 17

    (1) if -> IF expression THEN if ELSE . if
    (1) if -> . IF expression THEN if ELSE if
    (2) if -> . IF expression THEN if
    (3) if -> . expression
    (4) expression -> . expression PLUS expression
    (5) expression -> . term
    (6) term -> . term MULT factor
    (7) term -> . factor
    (8) factor -> . NUM
    (9) factor -> . LBR expression RBR

    IF              shift and go to state 2
    NUM             shift and go to state 6
    LBR             shift and go to state 7

    expression                     shift and go to state 3
    if                             shift and go to state 18
    term                           shift and go to state 4
    factor                         shift and go to state 5

state 18

    (1) if -> IF expression THEN if ELSE if .

    $end            reduce using rule 1 (if -> IF expression THEN if ELSE if .)
    ELSE            reduce using rule 1 (if -> IF expression THEN if ELSE if .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 13 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 16 resolved as shift
